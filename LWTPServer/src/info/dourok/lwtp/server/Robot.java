/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package info.dourok.lwtp.server;
import info.dourok.lwtp.LwtpLog;
import java.awt.AWTException;
import java.awt.Component;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.*;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author drcher
 */
public class Robot {
    private java.awt.Robot robot;
    private static Robot Singleton;
    
    private static final int MOUSE_BUTTON_1 = 0x51;
    private static final int MOUSE_BUTTON_2 = 0x52;
    private static final int MOUSE_BUTTON_3 = 0x53;
    
    public Robot() throws AWTException {
        robot = new java.awt.Robot();
        
        robot.setAutoWaitForIdle(true);
    }
    
    public void mouseMove(int dx, int dy){
        long  a = System.currentTimeMillis();
        Point mp = MouseInfo.getPointerInfo().getLocation();
        robot.mouseMove(mp.x+dx, mp.y+dy);
        //System.out.print((dx)+","+(dy)+",");
        //robot.waitForIdle();
        //System.out.println(System.currentTimeMillis() -a );
        
    }
    public void mouseMoveTo(int x,int y){
        robot.mouseMove(x,y);
        
    }
    public void mouseWheelUp(){
        robot.mouseWheel(-1);
    }
    public void mouseWheelDown(){
        robot.mouseWheel(1);
    }
    
    
    public void mouseClick(int button){
        button = getMouseButton(button);
        robot.mousePress(button);
        robot.mouseRelease(button);
    }
    public void mousePress(int button){
        button = getMouseButton(button);
        robot.mousePress(button);
    }
    public void mouseRelease(int button){
        button = getMouseButton(button);
        robot.mouseRelease(button);
    }
    
    public void keyPress(int keycode) throws IllegalArgumentException{
        robot.keyPress(keycode);
    }
    
    public void keyRelease(int keycode) throws IllegalArgumentException{
        robot.keyRelease(keycode);
    }
    
    public void doType(int keycode) throws IllegalArgumentException{
        robot.keyPress(keycode);
        robot.keyRelease(keycode);
    }
    
    public void doType(int... keycodes) throws IllegalArgumentException{
        doType(keycodes, 0, keycodes.length);
    }
    
    public void doType(int[] keycodes , int offset , int length) throws IllegalArgumentException{
        if (length == 0) {
            return;
        }
        robot.keyPress(keycodes[offset]);
        doType(keycodes, offset + 1, length - 1);
        robot.keyRelease(keycodes[offset]);
    }
    
    public static synchronized Robot getInstance() throws AWTException{
        if(Singleton==null){
            Singleton = new Robot();
        }
        return Singleton;
    }
    private static int getMouseButton(int id){
        switch (id) {
            case MOUSE_BUTTON_1:
                return MouseEvent.BUTTON1_MASK;
            case MOUSE_BUTTON_2:
                return MouseEvent.BUTTON2_MASK;
            case MOUSE_BUTTON_3:
                return MouseEvent.BUTTON3_MASK;
        }
        return id;
    }
    
    public static void main(String[] args) throws AWTException, InterruptedException, FileNotFoundException, IOException {
        final Robot robot =getInstance();
        final long p[] = new long[]{0,-4,1321014048908l,0,-8,1321014048910l,1,-13,1321014048911l,4,-14,1321014048912l,6,-15,1321014048912l,20,-34,1321014048912l,12,-16,1321014048915l,12,-12,1321014048918l,11,-11,1321014048919l,12,-9,1321014048919l,21,-8,1321014048920l,9,-1,1321014048921l,9,2,1321014048922l,9,5,1321014048922l,13,17,1321014048923l,5,11,1321014048924l,2,28,1321014048925l,-1,15,1321014048925l,-12,31,1321014048927l,-9,15,1321014048928l,-24,27,1321014048933l,-14,12,1321014048934l,-14,10,1321014048935l,-15,7,1321014048936l,-41,10,1321014048937l,-12,-1,1321014048938l,-11,-3,1321014048940l,-9,-6,1321014048947l,-15,-18,1321014049105l,-5,-12,1321014049106l,0,-32,1321014049106l,2,-19,1321014049107l,5,-20,1321014049107l,9,-21,1321014049107l,23,-37,1321014049108l,14,-15,1321014049108l,13,-11,1321014049108l,13,-8,1321014049109l,25,-7,1321014049109l,12,0,1321014049110l,25,6,1321014049110l,10,6,1321014049110l,9,9,1321014049315l,11,22,1321014049315l,3,25,1321014049316l,-1,13,1321014049317l,-9,28,1321014049319l,-7,13,1321014049320l,-9,14,1321014049320l,-12,13,1321014049321l,-13,12,1321014049322l,-29,25,1321014049323l,-30,18,1321014049324l,-16,7,1321014049325l,-15,5,1321014049327l,-13,2,1321014049526l,-12,0,1321014049527l,-11,-2,1321014049528l,-10,-5,1321014049529l,-10,-15,1321014049530l,-3,-12,1321014049531l,-1,-36,1321014049531l,5,-24,1321014049532l,10,-24,1321014049532l,11,-22,1321014049533l,12,-19,1321014049534l,28,-25,1321014049535l,14,-7,1321014049537l,15,-4,1321014049538l,15,-1,1321014049539l,15,0,1321014049737l,14,4,1321014049738l,14,7,1321014049739l,21,18,1321014049740l,12,56,1321014049741l,-3,15,1321014049742l,-16,28,1321014049742l,-13,13,1321014049742l,-15,13,1321014049743l,-17,11,1321014049743l,-17,9,1321014049743l,-32,8,1321014049744l,-12,0,1321014049945l,-19,-9,1321014049946l,-6,-9,1321014049946l,-4,-10,1321014049947l,-3,-10,1321014049947l,6,-32,1321014049948l,28,-43,1321014049948l,19,-21,1321014049948l,19,-17,1321014049949l,34,-24,1321014049949l,16,-5,1321014049949l,13,-3,1321014049950l,24,1,1321014049950l,11,5,1321014049950l,9,7,1321014050158l,11,20,1321014050159l,2,14,1321014050160l,0,16,1321014050161l,-1,17,1321014050162l,-4,17,1321014050165l,-13,33,1321014050167l,-10,16,1321014050168l,-9,16,1321014050169l,-21,25,1321014050170l,-11,10,1321014050171l,-11,7,1321014050172l,-10,4,1321014050173l,-10,2,1321014050174l,-10,0,1321014050174l,-10,-1,1321014050175l,-9,-3,1321014050367l,-19,-16,1321014050368l,-8,-12,1321014050369l,-9,-35,1321014050371l,-1,-25,1321014050372l,7,-57,1321014050373l,5,-23,1321014050374l,6,-21,1321014050375l,7,-18,1321014050377l,18,-28,1321014050378l,11,-10,1321014050379l,22,-14,1321014050381l,12,-3,1321014050382l,13,-2,1321014050576l,11,0,1321014050577l,12,2,1321014050578l,10,5,1321014050579l,17,18,1321014050580l,6,13,1321014050581l,3,17,1321014050582l,2,18,1321014050583l,0,44,1321014050583l,-2,23,1321014050584l,-5,25,1321014050584l,-7,22,1321014050584l,-21,43,1321014050585l,-12,18,1321014050586l,-24,22,1321014050587l,-12,5,1321014050788l,-10,2,1321014050788l,-11,0,1321014050789l,-12,-1,1321014050790l,-14,-3,1321014050791l,-27,-19,1321014050792l,-12,-12,1321014050793l,-10,-16,1321014050794l,-7,-16,1321014050795l,-5,-18,1321014050796l,0,-43,1321014050797l,5,-26,1321014050797l,28,-54,1321014050797l,18,-26,1321014050798l,36,-41,1321014050798l,15,-14,1321014050995l,14,-9,1321014050997l,12,-5,1321014050998l,13,-2,1321014050999l,23,5,1321014050999l,11,8,1321014050999l,9,11,1321014051000l,7,12,1321014051000l,6,15,1321014051000l,5,36,1321014051001l,0,20,1321014051001l,-5,44,1321014051002l,-5,22,1321014051002l,-6,22,1321014051002l,-7,18,1321014051002l,-10,19,1321014051209l,-9,17,1321014051209l,-10,13,1321014051210l,-9,11,1321014051210l,-9,7,1321014051210l,-16,5,1321014051211l,-8,-2,1321014051211l,-26,-12,1321014051212l,-29,-26,1321014051213l,-11,-17,1321014051215l,-12,-48,1321014051216l,0,-27,1321014051216l,4,-28,1321014051217l,9,-28,1321014051217l,12,-26,1321014051418l,27,-43,1321014051419l,12,-17,1321014051420l,11,-12,1321014051421l,8,-7,1321014051422l,8,-3,1321014051423l,7,0,1321014051424l,8,3,1321014051424l,16,14,1321014051425l,9,11,1321014051427l,8,14,1321014051427l,5,16,1321014051429l,4,18,1321014051430l,1,19,1321014051431l,0,42,1321014051432l,-4,22,1321014051434l,-4,21,1321014051625l,-7,20,1321014051626l,-7,18,1321014051627l,-9,16,1321014051628l,-21,27,1321014051629l,-10,10,1321014051629l,-10,6,1321014051629l,-10,4,1321014051630l,-9,1,1321014051630l,-9,0,1321014051630l,-9,-3,1321014051631l,-8,-4,1321014051631l,-8,-7,1321014051632l,-7,-10,1321014051633l,-6,-13,1321014051633l,-1,-16,1321014051633l,2,-22,1321014051634l,10,-28,1321014051829l,13,-30,1321014051829l,15,-29,1321014051829l,30,-46,1321014051829l,14,-18,1321014051829l,13,-14,1321014051829l,13,-11,1321014051829l,12,-9,1321014051839l,12,-6,1321014051840l,10,-4,1321014051841l,10,-1,1321014051842l,9,0,1321014051843l,19,12,1321014051844l,7,10,1321014051844l,5,12,1321014051845l,3,16,1321014051847l,1,18,1321014052031l,-2,42,1321014052031l,-4,23,1321014052031l,-6,25,1321014052032l,-8,25,1321014052032l,-10,22,1321014052032l,-10,21,1321014052032l,-11,18,1321014052033l,-25,26,1321014052033l,-13,8,1321014052033l,-12,3,1321014052033l,-15,0,1321014052034l,-37,-10,1321014052034l,-17,-11,1321014052034l,-16,-15,1321014052035l,-13,-16,1321014052231l,-11,-20,1321014052231l,-6,-22,1321014052232l,-2,-24,1321014052232l,2,-26,1321014052232l,18,-47,1321014052232l,13,-20,1321014052233l,27,-32,1321014052233l,23,-14,1321014052233l,12,-2,1321014052233l,12,0,1321014052235l,12,3,1321014052237l,23,14,1321014052238l,10,11,1321014052431l,9,12,1321014052433l,7,15,1321014052434l,6,36,1321014052435l,0,21,1321014052435l,-2,22,1321014052435l,-5,21,1321014052436l,-7,21,1321014052438l,-8,17,1321014052439l,-10,17,1321014052440l,-10,16,1321014052441l,-11,13,1321014052442l,-20,16,1321014052443l,-8,4,1321014052444l,-7,2,1321014052445l,-15,-3,1321014052632l,-8,-6,1321014052633l,-9,-7,1321014052633l,-8,-12,1321014052634l,-8,-16,1321014052635l,-6,-18,1321014052636l,-5,-21,1321014052636l,-2,-25,1321014052637l,3,-50,1321014052637l,6,-23,1321014052637l,8,-20,1321014052638l,11,-17,1321014052638l,21,-23,1321014052639l,12,-6,1321014052639l,13,-3,1321014052834l,29,1,1321014052835l,16,4,1321014052835l,28,18,1321014052837l,14,12,1321014052837l,11,16,1321014052838l,9,17,1321014052840l,5,19,1321014052841l,3,21,1321014052842l,0,23,1321014052842l,-4,24,1321014052843l,-7,23,1321014052843l,-19,44,1321014052843l,-12,19,1321014052844l,-25,26,1321014052844l,-24,15,1321014053035l,-13,6,1321014053037l,-24,4,1321014053037l,-12,0,1321014053039l,-25,-9,1321014053040l,-12,-7,1321014053042l,-9,-11,1321014053042l,-6,-16,1321014053043l,-4,-18,1321014053044l,-1,-20,1321014053044l,1,-22,1321014053044l,4,-23,1321014053045l,7,-25,1321014053047l,21,-49,1321014053047l,12,-22,1321014053252l,24,-33,1321014053252l,11,-10,1321014053253l,10,-7,1321014053254l,10,-3,1321014053254l,20,3,1321014053255l,10,7,1321014053255l,19,21,1321014053255l,7,14,1321014053255l,6,17,1321014053255l,4,19,1321014053256l,4,40,1321014053256l,0,21,1321014053257l,-3,19,1321014053257l,-4,19,1321014053456l,-6,18,1321014053456l,-14,33,1321014053456l,-8,12,1321014053456l,-8,9,1321014053467l,-8,7,1321014053468l,-7,4,1321014053470l,-7,2,1321014053470l,-7,1,1321014053470l,-9,0,1321014053471l,-8,-2,1321014053471l,-8,-3,1321014053471l,-17,-9,1321014053471l,-8,-8,1321014053471l,-7,-12,1321014053473l,-6,-12,1321014053474l,-5,-16,1321014053664l,-2,-15,1321014053664l,-1,-16,1321014053664l,2,-19,1321014053664l,4,-21,1321014053664l,9,-21,1321014053664l,9,-22,1321014053664l,9,-19,1321014053664l,10,-15,1321014053664l,9,-11,1321014053664l,8,-8,1321014053664l,16,-3,1321014053664l,9,3,1321014053664l,11,7,1321014053664l,10,12,1321014053664l,9,14,1321014053676l,7,17,1321014053677l,5,20,1321014053872l,4,42,1321014053873l,0,21,1321014053874l,-2,23,1321014053874l,-10,43,1321014053874l,-6,18,1321014053874l,-14,33,1321014053875l,-8,12,1321014053876l,-7,9,1321014053878l,-6,6,1321014053878l,-4,3,1321014053878l,-4,1,1321014053879l,-3,0,1321014053880l,-3,-2,1321014053880l,-10,-9,1321014053881l,-5,-5,1321014054074l,-7,-6,1321014054075l,-8,-10,1321014054077l,-8,-12,1321014054078l,-12,-28,1321014054080l,-3,-16,1321014054081l,-1,-18,1321014054081l,0,-18,1321014054081l,8,-36,1321014054082l,7,-19,1321014054082l,20,-40,1321014054082l,13,-18,1321014054083l,14,-14,1321014054083l,17,-9,1321014054083l,23,-6,1321014054291l,29,-2,1321014054292l};
//        robot.doType(KeyEvent.VK_V);
        JFrame f = new JFrame("Ha");
        Properties properties = new Properties();
        FileOutputStream fos = new FileOutputStream("properties.conf");
        properties.store(fos, "Haha");
        f.addMouseWheelListener(new MouseWheelListener() {

            @Override
            public void mouseWheelMoved(MouseWheelEvent mwe) {
                System.out.println(mwe);
                robot.mouseClick(MOUSE_BUTTON_1);
            }
        });
        f.addMouseListener(new MouseAdapter() {
            long t=System.currentTimeMillis();
            @Override
            public void mousePressed(MouseEvent me) {
                System.out.println(System.currentTimeMillis());
                System.out.println("press:\n"+me);
            }

            @Override
            public void mouseReleased(MouseEvent me) {
                System.out.println(System.currentTimeMillis());
                System.out.println("release:\n"+me);
            }
            
            @Override
            public void mouseClicked(MouseEvent me) {
                System.out.println(System.currentTimeMillis());
                System.out.println("Clicked:\n"+me);
                new Thread(){

                    @Override
                    public void run() {
                        long t1=0;
                        for(int i=0; i<p.length;i+=3){
                             robot.mouseMove((int)p[i], (int)p[i+1]);
                            try {
                                if(t1==0){
                                    t1 = p[i+2];
                                }else{
                                    long tt = p[i+2]-t1;
                                    Thread.sleep(tt);
                                    System.out.println(tt);
                                    t1 = p[i+2];
                                }
                                
                            } catch (InterruptedException ex) {
                                Logger.getLogger(Robot.class.getName()).log(Level.SEVERE, null, ex);
                            }
                           
                        }
                    }
                    
                }.start();
                
                super.mouseClicked(me);
            }
            
        });
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f.setVisible(true);
       // Thread.sleep(3000);
       // robot.mouseClick(MOUSE_BUTTON_3);
    }
    
}
